// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        compileSdkVersion = 30
        minSdkVersion = 21
        targetSdkVersion = 30
        buildToolsVersion = "29.0.3"
        versionCode = 1
        versionName = "1.0.0"

        kotlin_version = "1.4.10"
        core_ktx = "1.3.2"
        appcompat = "1.2.0"
        material = "1.2.1"
        junit = "4.13.1"
        android_junit = "1.1.2"
        espresso_core = "3.3.0"
        constraintlayout = "2.0.4"
        navigation_fragment_ktx = "2.3.1"
        navigation_ui_ktx = "2.3.1"
        lifecycle_livedata_ktx = "2.2.0"
        lifecycle_viewmodel_ktx = "2.2.0"
        retrofit = "2.9.0"
        converter_gson = "2.9.0"
        retrofit2_kotlin_coroutines_adapter = "0.9.2"
        logging_interceptor = "4.7.2"
        glide = "4.11.0"
        lifecycle_viewmodel_ktx = "2.3.0-beta01"
        lifecycle_runtime_ktx = "2.3.0-beta01"

        banner = "2.1.0"
    }
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
       maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
